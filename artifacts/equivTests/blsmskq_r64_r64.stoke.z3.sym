code: blsmskq %rcx, %rbx

  maybe read:      { %rcx %rbx }
  must read:       { %rcx %rbx }
  maybe write:     { %rbx %cf %zf %sf %of }
  must write:      { %rbx %cf %zf %sf %of }
  maybe undef:     { %pf %af }
  must undef:      { %pf %af }
  required flags:  { bmi1 }

Formula:

%rbx   : (bvxor (bvsub %rcx #x0000000000000001) %rcx)


%cf    : (ite (= %rcx #x0000000000000000) #b1 #b0)

%pf    : (ite TMP_BOOL_0 #b1 #b0)

%af    : (ite TMP_BOOL_1 #b1 #b0)

%zf    : #b0

%sf    : (let ((a!1 (= (bvxor ((_ extract 63 63) (bvsub %rcx #x0000000000000001))
                     ((_ extract 63 63) %rcx))
              #b1)))
  (ite a!1 #b1 #b0))

%of    : #b0


sigfpe  : sigfpe

sigbus  : sigbus

sigsegv : sigsegv

