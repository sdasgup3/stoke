code: cmpxchgl %ecx, (%rbx)

  maybe read:      { %eax %ecx %rbx }
  must read:       { %eax %ecx %rbx }
  maybe write:     { %rax %cf %pf %af %zf %sf %of }
  must write:      { %cf %pf %af %zf %sf %of }
  maybe undef:     { }
  must undef:      { }
  required flags:  { }

Formula:

%rax   : (ite (= ((_ extract 31 0) %rax) TMP_BV_32_0)
     %rax
     (concat #x00000000 TMP_BV_32_0))


%cf    : (let ((a!1 ((_ extract 32 32)
             (bvadd (concat #b0 (bvnot TMP_BV_32_0))
                    #b000000000000000000000000000000001
                    (concat #b0 ((_ extract 31 0) %rax))))))
  (ite (not (= a!1 #b1)) #b1 #b0))

%pf    : (let ((a!1 (bvadd (concat #b0 (bvnot TMP_BV_32_0))
                  #b000000000000000000000000000000001
                  (concat #b0 ((_ extract 31 0) %rax)))))
(let ((a!2 (not (xor (= ((_ extract 0 0) a!1) #b1)
                     (= ((_ extract 1 1) a!1) #b1)
                     (= ((_ extract 2 2) a!1) #b1)
                     (= ((_ extract 3 3) a!1) #b1)
                     (= ((_ extract 4 4) a!1) #b1)
                     (= ((_ extract 5 5) a!1) #b1)
                     (= ((_ extract 6 6) a!1) #b1)
                     (= ((_ extract 7 7) a!1) #b1)))))
  (ite a!2 #b1 #b0)))

%af    : (let ((a!1 ((_ extract 4 4)
             (bvadd (concat #b0 (bvnot TMP_BV_32_0))
                    #b000000000000000000000000000000001
                    (concat #b0 ((_ extract 31 0) %rax))))))
  (bvxor ((_ extract 4 4) TMP_BV_32_0) ((_ extract 4 4) %rax) a!1))

%zf    : (let ((a!1 ((_ extract 31 0)
             (bvadd (concat #b0 (bvnot TMP_BV_32_0))
                    #b000000000000000000000000000000001
                    (concat #b0 ((_ extract 31 0) %rax))))))
  (ite (= a!1 #x00000000) #b1 #b0))

%sf    : ((_ extract 31 31)
  (bvadd (concat #b0 (bvnot TMP_BV_32_0))
         #b000000000000000000000000000000001
         (concat #b0 ((_ extract 31 0) %rax))))

%of    : (let ((a!1 (= (= (bvnot ((_ extract 31 31) TMP_BV_32_0)) #b1)
              (= ((_ extract 31 31) %rax) #b1)))
      (a!2 ((_ extract 31 31)
             (bvadd (concat #b0 (bvnot TMP_BV_32_0))
                    #b000000000000000000000000000000001
                    (concat #b0 ((_ extract 31 0) %rax))))))
(let ((a!3 (= (= (bvnot ((_ extract 31 31) TMP_BV_32_0)) #b1) (= a!2 #b1))))
  (ite (and a!1 (not a!3)) #b1 #b0)))


Information about memory reads:
  Value TMP_BV_32_0
 (4 bytes)
    was read at address %rbx
.

Information about memory writes:
  Address %rbx
 was updated to
    Value (ite (= ((_ extract 31 0) %rax) TMP_BV_32_0)
     ((_ extract 31 0) %rcx)
     TMP_BV_32_0)
 (4 bytes).

sigfpe  : sigfpe

sigbus  : sigbus

sigsegv : (or sigsegv
    (and (not sigfpe) (not sigbus) false)
    (and (not sigfpe) (not sigbus) false))

