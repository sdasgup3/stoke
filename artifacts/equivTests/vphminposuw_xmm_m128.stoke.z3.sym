code: vphminposuw (%rbx), %xmm1

  maybe read:      { %rbx }
  must read:       { %rbx }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : (let ((a!1 (ite (bvult ((_ extract 31 16) TMP_BV_128_0)
                       ((_ extract 15 0) TMP_BV_128_0))
                ((_ extract 31 16) TMP_BV_128_0)
                ((_ extract 15 0) TMP_BV_128_0))))
(let ((a!2 (bvult ((_ extract 63 48) TMP_BV_128_0)
                  (ite (bvult ((_ extract 47 32) TMP_BV_128_0) a!1)
                       ((_ extract 47 32) TMP_BV_128_0)
                       a!1)))
      (a!7 (ite (bvult ((_ extract 47 32) TMP_BV_128_0) a!1)
                (concat #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
                        #b010)
                (ite (bvult ((_ extract 31 16) TMP_BV_128_0)
                            ((_ extract 15 0) TMP_BV_128_0))
                     (concat #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
                             #b001)
                     (concat #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
                             #b000)))))
(let ((a!3 (ite a!2
                ((_ extract 63 48) TMP_BV_128_0)
                (ite (bvult ((_ extract 47 32) TMP_BV_128_0) a!1)
                     ((_ extract 47 32) TMP_BV_128_0)
                     a!1))))
(let ((a!4 (bvult ((_ extract 95 80) TMP_BV_128_0)
                  (ite (bvult ((_ extract 79 64) TMP_BV_128_0) a!3)
                       ((_ extract 79 64) TMP_BV_128_0)
                       a!3))))
(let ((a!5 (ite a!4
                ((_ extract 95 80) TMP_BV_128_0)
                (ite (bvult ((_ extract 79 64) TMP_BV_128_0) a!3)
                     ((_ extract 79 64) TMP_BV_128_0)
                     a!3)))
      (a!8 (ite a!4
                (concat #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
                        #b101)
                (ite (bvult ((_ extract 79 64) TMP_BV_128_0) a!3)
                     (concat #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
                             #b100)
                     (ite a!2
                          (concat #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
                                  #b011)
                          a!7)))))
(let ((a!6 (bvult ((_ extract 127 112) TMP_BV_128_0)
                  (ite (bvult ((_ extract 111 96) TMP_BV_128_0) a!5)
                       ((_ extract 111 96) TMP_BV_128_0)
                       a!5))))
(let ((a!9 (ite a!6
                (concat #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
                        #b111)
                (ite (bvult ((_ extract 111 96) TMP_BV_128_0) a!5)
                     (concat #b0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
                             #b110)
                     a!8)))
      (a!10 (ite a!6
                 ((_ extract 127 112) TMP_BV_128_0)
                 (ite (bvult ((_ extract 111 96) TMP_BV_128_0) a!5)
                      ((_ extract 111 96) TMP_BV_128_0)
                      a!5))))
  (concat #x00000000000000000000000000000000 (concat a!9 a!10)))))))))


Information about memory reads:
  Value TMP_BV_128_0
 (16 bytes)
    was read at address %rbx
.

sigfpe  : sigfpe

sigbus  : sigbus

sigsegv : (or sigsegv (and (not sigfpe) (not sigbus) false))

