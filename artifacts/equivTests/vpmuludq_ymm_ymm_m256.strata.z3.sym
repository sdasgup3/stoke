code: vpmuludq (%rbx), %ymm2, %ymm1

  maybe read:      { %rbx %ymm2 }
  must read:       { %rbx %ymm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (let ((a!1 (concat (bvmul (concat #x00000000 ((_ extract 95 64) %ymm2))
                          (concat #x00000000 ((_ extract 95 64) TMP_BV_256_0)))
                   (bvmul (concat #x00000000 ((_ extract 31 0) %ymm2))
                          (concat #x00000000 ((_ extract 31 0) TMP_BV_256_0))))))
(let ((a!2 (concat (bvmul (concat #x00000000 ((_ extract 159 128) %ymm2))
                          (concat #x00000000 ((_ extract 159 128) TMP_BV_256_0)))
                   a!1)))
  (concat (bvmul (concat #x00000000 ((_ extract 223 192) %ymm2))
                 (concat #x00000000 ((_ extract 223 192) TMP_BV_256_0)))
          a!2)))


Information about memory reads:
  Value TMP_BV_256_0
 (32 bytes)
    was read at address %rbx
.

sigfpe  : sigfpe

sigbus  : sigbus

sigsegv : (or sigsegv (and (not sigfpe) (not sigbus) false))

