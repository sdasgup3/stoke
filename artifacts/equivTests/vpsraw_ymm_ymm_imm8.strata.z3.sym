code: vpsraw $0x0, %ymm2, %ymm1

  maybe read:      { %ymm2 }
  must read:       { %ymm2 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx2 }

Formula:

%ymm1  : (let ((a!1 (ite (bvugt (concat #x00000000000000 Imm8) #x000000000000000f)
                #x0010
                (concat #x00 Imm8))))
(let ((a!2 (concat (bvashr ((_ extract 47 32) %ymm2) a!1)
                   (concat (bvashr ((_ extract 31 16) %ymm2) a!1)
                           (bvashr ((_ extract 15 0) %ymm2) a!1)))))
(let ((a!3 (concat (bvashr ((_ extract 79 64) %ymm2) a!1)
                   (concat (bvashr ((_ extract 63 48) %ymm2) a!1) a!2))))
(let ((a!4 (concat (bvashr ((_ extract 111 96) %ymm2) a!1)
                   (concat (bvashr ((_ extract 95 80) %ymm2) a!1) a!3))))
(let ((a!5 (concat (bvashr ((_ extract 143 128) %ymm2) a!1)
                   (concat (bvashr ((_ extract 127 112) %ymm2) a!1) a!4))))
(let ((a!6 (concat (bvashr ((_ extract 175 160) %ymm2) a!1)
                   (concat (bvashr ((_ extract 159 144) %ymm2) a!1) a!5))))
(let ((a!7 (concat (bvashr ((_ extract 207 192) %ymm2) a!1)
                   (concat (bvashr ((_ extract 191 176) %ymm2) a!1) a!6))))
(let ((a!8 (concat (bvashr ((_ extract 239 224) %ymm2) a!1)
                   (concat (bvashr ((_ extract 223 208) %ymm2) a!1) a!7))))
  (concat (bvashr ((_ extract 255 240) %ymm2) a!1) a!8)))))))))


sigfpe  : sigfpe

sigbus  : sigbus

sigsegv : sigsegv

