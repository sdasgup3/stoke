



(declare-const Imm8 (_ BitVec 8))
(declare-const TMP_BV_8 (_ BitVec 8))
(declare-const TMP_BV_16 (_ BitVec 16))
(declare-const TMP_BV_32 (_ BitVec 32))
(declare-const TMP_BV_64 (_ BitVec 64))
(declare-const TMP_BV_128 (_ BitVec 128))
(declare-const TMP_BV_256 (_ BitVec 256))
(declare-const TMP_BOOL Bool)
(declare-const rbx (_ BitVec 64))
(declare-const rax (_ BitVec 64))
(declare-const rcx (_ BitVec 64))
(declare-const rdx (_ BitVec 64))
(declare-const rsp (_ BitVec 64))
(declare-const rip (_ BitVec 64))
(declare-const ymm0 (_ BitVec 256))
(declare-const ymm1 (_ BitVec 256))
(declare-const ymm2 (_ BitVec 256))
(declare-const ymm3 (_ BitVec 256))
(declare-const ymm4 (_ BitVec 256))
(declare-const ymm5 (_ BitVec 256))
(declare-const ymm6 (_ BitVec 256))
(declare-const ymm7 (_ BitVec 256))
(declare-const ymm8 (_ BitVec 256))
(declare-const ymm9 (_ BitVec 256))
(declare-const ymm10 (_ BitVec 256))
(declare-const ymm11 (_ BitVec 256))
(declare-const ymm12 (_ BitVec 256))
(declare-const ymm13 (_ BitVec 256))
(declare-const ymm14 (_ BitVec 256))
(declare-const ymm15 (_ BitVec 256))
(declare-const zf Bool)
(declare-const sf Bool)
(declare-const cf Bool)
(declare-const pf Bool)
(declare-const af Bool)
(declare-const of Bool)

; Uninterpreted binary function declaration
(declare-fun comisd ((_ BitVec 64) (_ BitVec 64)) (_ BitVec 2))
(declare-fun comiss ((_ BitVec 32) (_ BitVec 32)) (_ BitVec 2))
(declare-fun    cvt_single_to_fp16_rm   ((_ BitVec 32) (_ BitVec 8)) (_ BitVec 16) )
(declare-fun    cvt_single_to_int32_rm  ((_ BitVec 32) (_ BitVec 8)) (_ BitVec 32) )
(declare-fun    cvt_double_to_int64_rm  ((_ BitVec 64) (_ BitVec 8)) (_ BitVec 64) )

(declare-fun add_double ((_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))
(declare-fun add_single ((_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))
(declare-fun sub_double ((_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))
(declare-fun sub_single ((_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))
(declare-fun div_double ((_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))
(declare-fun div_single ((_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))
(declare-fun mul_double ((_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))
(declare-fun mul_single ((_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))
(declare-fun maxcmp_double ((_ BitVec 64) (_ BitVec 64)) (_ BitVec 1))
(declare-fun maxcmp_single ((_ BitVec 32) (_ BitVec 32)) (_ BitVec 1))
(declare-fun mincmp_double ((_ BitVec 64) (_ BitVec 64)) (_ BitVec 1))
(declare-fun mincmp_single ((_ BitVec 32) (_ BitVec 32)) (_ BitVec 1))

(declare-fun idiv_quotient_int8   ((_ BitVec 16) (_ BitVec 8)) (_ BitVec 8))
(declare-fun idiv_remainder_int8  ((_ BitVec 16) (_ BitVec 8)) (_ BitVec 8))
(declare-fun idiv_quotient_int16  ((_ BitVec 32) (_ BitVec 16)) (_ BitVec 16))
(declare-fun idiv_remainder_int16 ((_ BitVec 32) (_ BitVec 16)) (_ BitVec 16))
(declare-fun idiv_quotient_int32  ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))
(declare-fun idiv_remainder_int32 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))
(declare-fun idiv_quotient_int64  ((_ BitVec 128) (_ BitVec 64)) (_ BitVec 64))
(declare-fun idiv_remainder_int64 ((_ BitVec 128) (_ BitVec 64)) (_ BitVec 64))
(declare-fun div_quotient_int8   ((_ BitVec 16) (_ BitVec 8)) (_ BitVec 8))
(declare-fun div_remainder_int8  ((_ BitVec 16) (_ BitVec 8)) (_ BitVec 8))
(declare-fun div_quotient_int16  ((_ BitVec 32) (_ BitVec 16)) (_ BitVec 16))
(declare-fun div_remainder_int16 ((_ BitVec 32) (_ BitVec 16)) (_ BitVec 16))
(declare-fun div_quotient_int32  ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))
(declare-fun div_remainder_int32 ((_ BitVec 64) (_ BitVec 32)) (_ BitVec 32))
(declare-fun div_quotient_int64  ((_ BitVec 128) (_ BitVec 64)) (_ BitVec 64))
(declare-fun div_remainder_int64 ((_ BitVec 128) (_ BitVec 64)) (_ BitVec 64))

; Uninterpreted unary function declaration
(declare-fun    cvt_half_to_single      ((_ BitVec 16)) (_ BitVec 32) )
(declare-fun    cvt_double_to_int64_truncate     ((_ BitVec 64)) (_ BitVec 64) )
(declare-fun    cvt_single_to_int64_truncate     ((_ BitVec 32)) (_ BitVec 64) )

(declare-fun approx_reciprocal_double       ((_ BitVec 64)) (_ BitVec 64) )
(declare-fun approx_reciprocal_single       ((_ BitVec 32)) (_ BitVec 32) )
(declare-fun sqrt_double                    ((_ BitVec 64)) (_ BitVec 64) )
(declare-fun sqrt_single                    ((_ BitVec 32)) (_ BitVec 32) )
(declare-fun approx_reciprocal_sqrt_double  ((_ BitVec 64)) (_ BitVec 64) )
(declare-fun approx_reciprocal_sqrt_single  ((_ BitVec 32)) (_ BitVec 32) )

(declare-fun cvt_single_to_double           ((_ BitVec 32)) (_ BitVec 64) )
(declare-fun cvt_double_to_single           ((_ BitVec 64)) (_ BitVec 32) )

(declare-fun cvt_single_to_int32            ((_ BitVec 32)) (_ BitVec 32) )
(declare-fun cvt_single_to_int32_truncate   ((_ BitVec 32)) (_ BitVec 32) )
(declare-fun cvt_single_to_int64            ((_ BitVec 32)) (_ BitVec 64) )
(declare-fun cvt_double_to_int32            ((_ BitVec 64)) (_ BitVec 32) )
(declare-fun cvt_double_to_int32_truncate   ((_ BitVec 64)) (_ BitVec 32) )
(declare-fun cvt_double_to_int64            ((_ BitVec 64)) (_ BitVec 64) )

(declare-fun cvt_int32_to_single            ((_ BitVec 32)) (_ BitVec 32) )
(declare-fun cvt_int32_to_double            ((_ BitVec 32)) (_ BitVec 64) )
(declare-fun cvt_int64_to_single            ((_ BitVec 64)) (_ BitVec 32) )
(declare-fun cvt_int64_to_double            ((_ BitVec 64)) (_ BitVec 64) )

; Uninterpreted ternary function declaration
(declare-fun cmp_double_pred ((_ BitVec 64) (_ BitVec 64) (_ BitVec 8)) (_ BitVec 1))
(declare-fun cmp_single_pred ((_ BitVec 32) (_ BitVec 32) (_ BitVec 8)) (_ BitVec 1))

(declare-fun vfmadd132_double ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))
(declare-fun vfmadd132_single ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))
(declare-fun vfmadd231_double ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))
(declare-fun vfmadd231_single ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))
(declare-fun vfmadd213_double ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))
(declare-fun vfmadd213_single ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))
(declare-fun vfmsub132_double ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))
(declare-fun vfmsub132_single ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))
(declare-fun vfmsub231_double ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))
(declare-fun vfmsub231_single ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))
(declare-fun vfmsub213_double ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))
(declare-fun vfmsub213_single ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))
(declare-fun vfnmadd132_double ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))
(declare-fun vfnmadd132_single ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))
(declare-fun vfnmsub132_double ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))
(declare-fun vfnmsub132_single ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))
(declare-fun vfnmadd213_double ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))
(declare-fun vfnmadd231_double ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))
(declare-fun vfnmsub213_double ((_ BitVec 64) (_ BitVec 64) (_ BitVec 64)) (_ BitVec 64))
(declare-fun vfnmadd213_single ((_ BitVec 32) (_ BitVec 32) (_ BitVec 32)) (_ BitVec 32))


( push )
( echo "vpblendvb_ymm_ymm_m256_ymm::ymm1")
(assert (not (=
(let ((a!1 (concat (ite (= ((_ extract 15 15) ymm3) #b1)
((_ extract 15 8) TMP_BV_256)
((_ extract 15 8) ymm2))
(ite (= ((_ extract 7 7) ymm3) #b1)
((_ extract 7 0) TMP_BV_256)
((_ extract 7 0) ymm2)))))
(let ((a!2 (concat (ite (= ((_ extract 23 23) ymm3) #b1)
((_ extract 23 16) TMP_BV_256)
((_ extract 23 16) ymm2))
a!1)))
(let ((a!3 (concat (ite (= ((_ extract 31 31) ymm3) #b1)
((_ extract 31 24) TMP_BV_256)
((_ extract 31 24) ymm2))
a!2)))
(let ((a!4 (concat (ite (= ((_ extract 39 39) ymm3) #b1)
((_ extract 39 32) TMP_BV_256)
((_ extract 39 32) ymm2))
a!3)))
(let ((a!5 (concat (ite (= ((_ extract 47 47) ymm3) #b1)
((_ extract 47 40) TMP_BV_256)
((_ extract 47 40) ymm2))
a!4)))
(let ((a!6 (concat (ite (= ((_ extract 55 55) ymm3) #b1)
((_ extract 55 48) TMP_BV_256)
((_ extract 55 48) ymm2))
a!5)))
(let ((a!7 (concat (ite (= ((_ extract 63 63) ymm3) #b1)
((_ extract 63 56) TMP_BV_256)
((_ extract 63 56) ymm2))
a!6)))
(let ((a!8 (concat (ite (= ((_ extract 71 71) ymm3) #b1)
((_ extract 71 64) TMP_BV_256)
((_ extract 71 64) ymm2))
a!7)))
(let ((a!9 (concat (ite (= ((_ extract 79 79) ymm3) #b1)
((_ extract 79 72) TMP_BV_256)
((_ extract 79 72) ymm2))
a!8)))
(let ((a!10 (concat (ite (= ((_ extract 87 87) ymm3) #b1)
((_ extract 87 80) TMP_BV_256)
((_ extract 87 80) ymm2))
a!9)))
(let ((a!11 (concat (ite (= ((_ extract 95 95) ymm3) #b1)
((_ extract 95 88) TMP_BV_256)
((_ extract 95 88) ymm2))
a!10)))
(let ((a!12 (concat (ite (= ((_ extract 103 103) ymm3) #b1)
((_ extract 103 96) TMP_BV_256)
((_ extract 103 96) ymm2))
a!11)))
(let ((a!13 (concat (ite (= ((_ extract 111 111) ymm3) #b1)
((_ extract 111 104) TMP_BV_256)
((_ extract 111 104) ymm2))
a!12)))
(let ((a!14 (concat (ite (= ((_ extract 119 119) ymm3) #b1)
((_ extract 119 112) TMP_BV_256)
((_ extract 119 112) ymm2))
a!13)))
(let ((a!15 (concat (ite (= ((_ extract 127 127) ymm3) #b1)
((_ extract 127 120) TMP_BV_256)
((_ extract 127 120) ymm2))
a!14)))
(let ((a!16 (concat (ite (= ((_ extract 135 135) ymm3) #b1)
((_ extract 135 128) TMP_BV_256)
((_ extract 135 128) ymm2))
a!15)))
(let ((a!17 (concat (ite (= ((_ extract 143 143) ymm3) #b1)
((_ extract 143 136) TMP_BV_256)
((_ extract 143 136) ymm2))
a!16)))
(let ((a!18 (concat (ite (= ((_ extract 151 151) ymm3) #b1)
((_ extract 151 144) TMP_BV_256)
((_ extract 151 144) ymm2))
a!17)))
(let ((a!19 (concat (ite (= ((_ extract 159 159) ymm3) #b1)
((_ extract 159 152) TMP_BV_256)
((_ extract 159 152) ymm2))
a!18)))
(let ((a!20 (concat (ite (= ((_ extract 167 167) ymm3) #b1)
((_ extract 167 160) TMP_BV_256)
((_ extract 167 160) ymm2))
a!19)))
(let ((a!21 (concat (ite (= ((_ extract 175 175) ymm3) #b1)
((_ extract 175 168) TMP_BV_256)
((_ extract 175 168) ymm2))
a!20)))
(let ((a!22 (concat (ite (= ((_ extract 183 183) ymm3) #b1)
((_ extract 183 176) TMP_BV_256)
((_ extract 183 176) ymm2))
a!21)))
(let ((a!23 (concat (ite (= ((_ extract 191 191) ymm3) #b1)
((_ extract 191 184) TMP_BV_256)
((_ extract 191 184) ymm2))
a!22)))
(let ((a!24 (concat (ite (= ((_ extract 199 199) ymm3) #b1)
((_ extract 199 192) TMP_BV_256)
((_ extract 199 192) ymm2))
a!23)))
(let ((a!25 (concat (ite (= ((_ extract 207 207) ymm3) #b1)
((_ extract 207 200) TMP_BV_256)
((_ extract 207 200) ymm2))
a!24)))
(let ((a!26 (concat (ite (= ((_ extract 215 215) ymm3) #b1)
((_ extract 215 208) TMP_BV_256)
((_ extract 215 208) ymm2))
a!25)))
(let ((a!27 (concat (ite (= ((_ extract 223 223) ymm3) #b1)
((_ extract 223 216) TMP_BV_256)
((_ extract 223 216) ymm2))
a!26)))
(let ((a!28 (concat (ite (= ((_ extract 231 231) ymm3) #b1)
((_ extract 231 224) TMP_BV_256)
((_ extract 231 224) ymm2))
a!27)))
(let ((a!29 (concat (ite (= ((_ extract 239 239) ymm3) #b1)
((_ extract 239 232) TMP_BV_256)
((_ extract 239 232) ymm2))
a!28)))
(let ((a!30 (concat (ite (= ((_ extract 247 247) ymm3) #b1)
((_ extract 247 240) TMP_BV_256)
((_ extract 247 240) ymm2))
a!29)))
(concat (ite (= ((_ extract 255 255) ymm3) #b1)
((_ extract 255 248) TMP_BV_256)
((_ extract 255 248) ymm2))
a!30)))))))))))))))))))))))))))))))

(let ((a!1 (concat (ite (= ((_ extract 15 15) ymm3) #b1)
((_ extract 15 8) TMP_BV_256)
((_ extract 15 8) ymm2))
(ite (= ((_ extract 7 7) ymm3) #b1)
((_ extract 7 0) TMP_BV_256)
((_ extract 7 0) ymm2)))))
(let ((a!2 (concat (ite (= ((_ extract 23 23) ymm3) #b1)
((_ extract 23 16) TMP_BV_256)
((_ extract 23 16) ymm2))
a!1)))
(let ((a!3 (concat (ite (= ((_ extract 31 31) ymm3) #b1)
((_ extract 31 24) TMP_BV_256)
((_ extract 31 24) ymm2))
a!2)))
(let ((a!4 (concat (ite (= ((_ extract 39 39) ymm3) #b1)
((_ extract 39 32) TMP_BV_256)
((_ extract 39 32) ymm2))
a!3)))
(let ((a!5 (concat (ite (= ((_ extract 47 47) ymm3) #b1)
((_ extract 47 40) TMP_BV_256)
((_ extract 47 40) ymm2))
a!4)))
(let ((a!6 (concat (ite (= ((_ extract 55 55) ymm3) #b1)
((_ extract 55 48) TMP_BV_256)
((_ extract 55 48) ymm2))
a!5)))
(let ((a!7 (concat (ite (= ((_ extract 63 63) ymm3) #b1)
((_ extract 63 56) TMP_BV_256)
((_ extract 63 56) ymm2))
a!6)))
(let ((a!8 (concat (ite (= ((_ extract 71 71) ymm3) #b1)
((_ extract 71 64) TMP_BV_256)
((_ extract 71 64) ymm2))
a!7)))
(let ((a!9 (concat (ite (= ((_ extract 79 79) ymm3) #b1)
((_ extract 79 72) TMP_BV_256)
((_ extract 79 72) ymm2))
a!8)))
(let ((a!10 (concat (ite (= ((_ extract 87 87) ymm3) #b1)
((_ extract 87 80) TMP_BV_256)
((_ extract 87 80) ymm2))
a!9)))
(let ((a!11 (concat (ite (= ((_ extract 95 95) ymm3) #b1)
((_ extract 95 88) TMP_BV_256)
((_ extract 95 88) ymm2))
a!10)))
(let ((a!12 (concat (ite (= ((_ extract 103 103) ymm3) #b1)
((_ extract 103 96) TMP_BV_256)
((_ extract 103 96) ymm2))
a!11)))
(let ((a!13 (concat (ite (= ((_ extract 111 111) ymm3) #b1)
((_ extract 111 104) TMP_BV_256)
((_ extract 111 104) ymm2))
a!12)))
(let ((a!14 (concat (ite (= ((_ extract 119 119) ymm3) #b1)
((_ extract 119 112) TMP_BV_256)
((_ extract 119 112) ymm2))
a!13)))
(let ((a!15 (concat (ite (= ((_ extract 127 127) ymm3) #b1)
((_ extract 127 120) TMP_BV_256)
((_ extract 127 120) ymm2))
a!14)))
(let ((a!16 (concat (ite (= ((_ extract 135 135) ymm3) #b1)
((_ extract 135 128) TMP_BV_256)
((_ extract 135 128) ymm2))
a!15)))
(let ((a!17 (concat (ite (= ((_ extract 143 143) ymm3) #b1)
((_ extract 143 136) TMP_BV_256)
((_ extract 143 136) ymm2))
a!16)))
(let ((a!18 (concat (ite (= ((_ extract 151 151) ymm3) #b1)
((_ extract 151 144) TMP_BV_256)
((_ extract 151 144) ymm2))
a!17)))
(let ((a!19 (concat (ite (= ((_ extract 159 159) ymm3) #b1)
((_ extract 159 152) TMP_BV_256)
((_ extract 159 152) ymm2))
a!18)))
(let ((a!20 (concat (ite (= ((_ extract 167 167) ymm3) #b1)
((_ extract 167 160) TMP_BV_256)
((_ extract 167 160) ymm2))
a!19)))
(let ((a!21 (concat (ite (= ((_ extract 175 175) ymm3) #b1)
((_ extract 175 168) TMP_BV_256)
((_ extract 175 168) ymm2))
a!20)))
(let ((a!22 (concat (ite (= ((_ extract 183 183) ymm3) #b1)
((_ extract 183 176) TMP_BV_256)
((_ extract 183 176) ymm2))
a!21)))
(let ((a!23 (concat (ite (= ((_ extract 191 191) ymm3) #b1)
((_ extract 191 184) TMP_BV_256)
((_ extract 191 184) ymm2))
a!22)))
(let ((a!24 (concat (ite (= ((_ extract 199 199) ymm3) #b1)
((_ extract 199 192) TMP_BV_256)
((_ extract 199 192) ymm2))
a!23)))
(let ((a!25 (concat (ite (= ((_ extract 207 207) ymm3) #b1)
((_ extract 207 200) TMP_BV_256)
((_ extract 207 200) ymm2))
a!24)))
(let ((a!26 (concat (ite (= ((_ extract 215 215) ymm3) #b1)
((_ extract 215 208) TMP_BV_256)
((_ extract 215 208) ymm2))
a!25)))
(let ((a!27 (concat (ite (= ((_ extract 223 223) ymm3) #b1)
((_ extract 223 216) TMP_BV_256)
((_ extract 223 216) ymm2))
a!26)))
(let ((a!28 (concat (ite (= ((_ extract 231 231) ymm3) #b1)
((_ extract 231 224) TMP_BV_256)
((_ extract 231 224) ymm2))
a!27)))
(let ((a!29 (concat (ite (= ((_ extract 239 239) ymm3) #b1)
((_ extract 239 232) TMP_BV_256)
((_ extract 239 232) ymm2))
a!28)))
(let ((a!30 (concat (ite (= ((_ extract 247 247) ymm3) #b1)
((_ extract 247 240) TMP_BV_256)
((_ extract 247 240) ymm2))
a!29)))
(concat (ite (= ((_ extract 255 255) ymm3) #b1)
((_ extract 255 248) TMP_BV_256)
((_ extract 255 248) ymm2))
a!30)))))))))))))))))))))))))))))))
)))
(check-sat)
( pop )



