code: vblendvpd %ymm3, (%rbx), %ymm2, %ymm1

  maybe read:      { %rbx %ymm2 %ymm3 }
  must read:       { %rbx %ymm2 %ymm3 }
  maybe write:     { %ymm1 }
  must write:      { %ymm1 }
  maybe undef:     { }
  must undef:      { }
  required flags:  { avx }

Formula:

%ymm1  : (let ((a!1 (concat (ite (= ((_ extract 127 127) %ymm3) #b0)
                        ((_ extract 127 64) %ymm2)
                        ((_ extract 127 64) TMP_BV_256_0))
                   (ite (= ((_ extract 63 63) %ymm3) #b0)
                        ((_ extract 63 0) %ymm2)
                        ((_ extract 63 0) TMP_BV_256_0)))))
(let ((a!2 (concat (ite (= ((_ extract 191 191) %ymm3) #b0)
                        ((_ extract 191 128) %ymm2)
                        ((_ extract 191 128) TMP_BV_256_0))
                   a!1)))
  (concat (ite (= ((_ extract 255 255) %ymm3) #b0)
               ((_ extract 255 192) %ymm2)
               ((_ extract 255 192) TMP_BV_256_0))
          a!2)))


Information about memory reads:
  Value TMP_BV_256_0
 (32 bytes)
    was read at address %rbx
.

sigfpe  : sigfpe

sigbus  : sigbus

sigsegv : (or sigsegv (and (not sigfpe) (not sigbus) false))

