tp.insert_opcode(x64asm::Opcode::BLENDPD_XMM_M128_IMM8);
tp.insert_opcode(x64asm::Opcode::BLENDPD_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::BLENDPS_XMM_M128_IMM8);
tp.insert_opcode(x64asm::Opcode::BLENDPS_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::BLENDVPD_XMM_M128_XMM0);
tp.insert_opcode(x64asm::Opcode::BLENDVPD_XMM_XMM_XMM0);
tp.insert_opcode(x64asm::Opcode::BLENDVPS_XMM_M128_XMM0);
tp.insert_opcode(x64asm::Opcode::BLENDVPS_XMM_XMM_XMM0);
tp.insert_opcode(x64asm::Opcode::BLSI_R64_M64);
tp.insert_opcode(x64asm::Opcode::BLSI_R64_R64);
tp.insert_opcode(x64asm::Opcode::BLSMSK_R64_M64);
tp.insert_opcode(x64asm::Opcode::BLSMSK_R64_R64);
tp.insert_opcode(x64asm::Opcode::BZHI_R32_M32_R32);
tp.insert_opcode(x64asm::Opcode::BZHI_R32_R32_R32);
tp.insert_opcode(x64asm::Opcode::BZHI_R64_M64_R64);
tp.insert_opcode(x64asm::Opcode::BZHI_R64_R64_R64);
tp.insert_opcode(x64asm::Opcode::CMPPD_XMM_M128_IMM8);
tp.insert_opcode(x64asm::Opcode::CMPPD_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::CMPPS_XMM_M128_IMM8);
tp.insert_opcode(x64asm::Opcode::CMPPS_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::CMPSD_XMM_M64_IMM8);
tp.insert_opcode(x64asm::Opcode::CMPSD_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::CMPSS_XMM_M32_IMM8);
tp.insert_opcode(x64asm::Opcode::CMPSS_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::CMPXCHG16B_M128);
tp.insert_opcode(x64asm::Opcode::CMPXCHG8B_M64);
tp.insert_opcode(x64asm::Opcode::COMISD_XMM_M64);
tp.insert_opcode(x64asm::Opcode::COMISD_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::COMISS_XMM_M32);
tp.insert_opcode(x64asm::Opcode::COMISS_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::CVTSD2SI_R32_M64);
tp.insert_opcode(x64asm::Opcode::CVTSD2SI_R32_XMM);
tp.insert_opcode(x64asm::Opcode::CVTSS2SI_R32_M32);
tp.insert_opcode(x64asm::Opcode::CVTSS2SI_R32_XMM);
tp.insert_opcode(x64asm::Opcode::CVTTSD2SI_R32_M64);
tp.insert_opcode(x64asm::Opcode::CVTTSD2SI_R32_XMM);
tp.insert_opcode(x64asm::Opcode::CVTTSS2SI_R32_M32);
tp.insert_opcode(x64asm::Opcode::CVTTSS2SI_R32_XMM);
tp.insert_opcode(x64asm::Opcode::DPPD_XMM_M128_IMM8);
tp.insert_opcode(x64asm::Opcode::DPPD_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::DPPS_XMM_M128_IMM8);
tp.insert_opcode(x64asm::Opcode::DPPS_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::EXTRACTPS_M32_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::EXTRACTPS_R32_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::EXTRACTPS_R64_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::INSERTPS_XMM_M32_IMM8);
tp.insert_opcode(x64asm::Opcode::INSERTPS_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::LZCNT_R32_M32);
tp.insert_opcode(x64asm::Opcode::LZCNT_R32_R32);
tp.insert_opcode(x64asm::Opcode::LZCNT_R64_M64);
tp.insert_opcode(x64asm::Opcode::LZCNT_R64_R64);
tp.insert_opcode(x64asm::Opcode::LZCNT_R16_M16);
tp.insert_opcode(x64asm::Opcode::LZCNT_R16_R16);
tp.insert_opcode(x64asm::Opcode::MOVBE_M32_R32);
tp.insert_opcode(x64asm::Opcode::MOVBE_R32_M32);
tp.insert_opcode(x64asm::Opcode::MOVBE_M64_R64);
tp.insert_opcode(x64asm::Opcode::MOVBE_R64_M64);
tp.insert_opcode(x64asm::Opcode::MOVBE_M16_R16);
tp.insert_opcode(x64asm::Opcode::MOVBE_R16_M16);
tp.insert_opcode(x64asm::Opcode::MOVNTDQ_M128_XMM);
tp.insert_opcode(x64asm::Opcode::MOVNTDQA_XMM_M128);
tp.insert_opcode(x64asm::Opcode::MOVNTI_M32_R32);
tp.insert_opcode(x64asm::Opcode::MOVNTI_M64_R64);
tp.insert_opcode(x64asm::Opcode::MOVNTPD_M128_XMM);
tp.insert_opcode(x64asm::Opcode::MOVNTPS_M128_XMM);
tp.insert_opcode(x64asm::Opcode::MPSADBW_XMM_M128_IMM8);
tp.insert_opcode(x64asm::Opcode::MPSADBW_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::MULX_R32_R32_M32);
tp.insert_opcode(x64asm::Opcode::MULX_R32_R32_R32);
tp.insert_opcode(x64asm::Opcode::MULX_R64_R64_M64);
tp.insert_opcode(x64asm::Opcode::MULX_R64_R64_R64);
tp.insert_opcode(x64asm::Opcode::PACKSSDW_XMM_M128);
tp.insert_opcode(x64asm::Opcode::PACKSSDW_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::PACKSSWB_XMM_M128);
tp.insert_opcode(x64asm::Opcode::PACKSSWB_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::PACKUSDW_XMM_M128);
tp.insert_opcode(x64asm::Opcode::PACKUSDW_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::PACKUSWB_XMM_M128);
tp.insert_opcode(x64asm::Opcode::PACKUSWB_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::PADDSB_XMM_M128);
tp.insert_opcode(x64asm::Opcode::PADDSB_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::PADDSW_XMM_M128);
tp.insert_opcode(x64asm::Opcode::PADDSW_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::PBLENDVB_XMM_M128_XMM0);
tp.insert_opcode(x64asm::Opcode::PBLENDVB_XMM_XMM_XMM0);
tp.insert_opcode(x64asm::Opcode::PBLENDW_XMM_M128_IMM8);
tp.insert_opcode(x64asm::Opcode::PBLENDW_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::PCLMULQDQ_XMM_M128_IMM8);
tp.insert_opcode(x64asm::Opcode::PCLMULQDQ_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::PEXTRB_M8_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::PEXTRB_R32_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::PEXTRB_R64_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::PEXTRD_M32_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::PEXTRD_R32_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::PEXTRQ_M64_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::PEXTRQ_R64_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::PEXTRW_M16_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::PEXTRW_R32_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::PEXTRW_R64_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::PHADDSW_XMM_M128);
tp.insert_opcode(x64asm::Opcode::PHADDSW_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::PHMINPOSUW_XMM_M128);
tp.insert_opcode(x64asm::Opcode::PHMINPOSUW_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::PHSUBSW_XMM_M128);
tp.insert_opcode(x64asm::Opcode::PHSUBSW_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::PINSRB_XMM_M8_IMM8);
tp.insert_opcode(x64asm::Opcode::PINSRB_XMM_R32_IMM8);
tp.insert_opcode(x64asm::Opcode::PINSRD_XMM_M32_IMM8);
tp.insert_opcode(x64asm::Opcode::PINSRD_XMM_R32_IMM8);
tp.insert_opcode(x64asm::Opcode::PINSRW_XMM_M16_IMM8);
tp.insert_opcode(x64asm::Opcode::PINSRW_XMM_R32_IMM8);
tp.insert_opcode(x64asm::Opcode::PMADDUBSW_XMM_M128);
tp.insert_opcode(x64asm::Opcode::PMADDUBSW_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::PMADDWD_XMM_M128);
tp.insert_opcode(x64asm::Opcode::PMADDWD_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::PMULHRSW_XMM_M128);
tp.insert_opcode(x64asm::Opcode::PMULHRSW_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::PMULHUW_XMM_M128);
tp.insert_opcode(x64asm::Opcode::PMULHUW_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::PMULUDQ_XMM_M128);
tp.insert_opcode(x64asm::Opcode::PMULUDQ_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::PSADBW_XMM_M128);
tp.insert_opcode(x64asm::Opcode::PSADBW_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::PSHUFB_XMM_M128);
tp.insert_opcode(x64asm::Opcode::PSHUFB_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::PSHUFHW_XMM_M128_IMM8);
tp.insert_opcode(x64asm::Opcode::PSHUFHW_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::PSLLDQ_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::PSRAD_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::PSRAD_XMM_M128);
tp.insert_opcode(x64asm::Opcode::PSRAD_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::PSRAW_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::PSRAW_XMM_M128);
tp.insert_opcode(x64asm::Opcode::PSRAW_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::PSRLDQ_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::PTEST_XMM_M128);
tp.insert_opcode(x64asm::Opcode::PTEST_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::RORX_R32_M32_IMM8);
tp.insert_opcode(x64asm::Opcode::RORX_R32_R32_IMM8);
tp.insert_opcode(x64asm::Opcode::RORX_R64_M64_IMM8);
tp.insert_opcode(x64asm::Opcode::RORX_R64_R64_IMM8);
tp.insert_opcode(x64asm::Opcode::ROUNDPD_XMM_M128_IMM8);
tp.insert_opcode(x64asm::Opcode::ROUNDPD_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::ROUNDPS_XMM_M128_IMM8);
tp.insert_opcode(x64asm::Opcode::ROUNDPS_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::ROUNDSD_XMM_M64_IMM8);
tp.insert_opcode(x64asm::Opcode::ROUNDSD_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::ROUNDSS_XMM_M32_IMM8);
tp.insert_opcode(x64asm::Opcode::ROUNDSS_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::SARX_R32_M32_R32);
tp.insert_opcode(x64asm::Opcode::SARX_R32_R32_R32);
tp.insert_opcode(x64asm::Opcode::SHLX_R32_M32_R32);
tp.insert_opcode(x64asm::Opcode::SHLX_R32_R32_R32);
tp.insert_opcode(x64asm::Opcode::TZCNT_R64_M64);
tp.insert_opcode(x64asm::Opcode::TZCNT_R64_R64);
tp.insert_opcode(x64asm::Opcode::UCOMISD_XMM_M64);
tp.insert_opcode(x64asm::Opcode::UCOMISD_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::UCOMISS_XMM_M32);
tp.insert_opcode(x64asm::Opcode::UCOMISS_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::VADDSUBPD_YMM_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VADDSUBPD_YMM_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VADDSUBPS_YMM_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VADDSUBPS_YMM_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VBLENDPD_XMM_XMM_M128_IMM8);
tp.insert_opcode(x64asm::Opcode::VBLENDPD_XMM_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VBLENDPD_YMM_YMM_M256_IMM8);
tp.insert_opcode(x64asm::Opcode::VBLENDPD_YMM_YMM_YMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VBLENDPS_XMM_XMM_M128_IMM8);
tp.insert_opcode(x64asm::Opcode::VBLENDPS_XMM_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VBLENDPS_YMM_YMM_M256_IMM8);
tp.insert_opcode(x64asm::Opcode::VBLENDPS_YMM_YMM_YMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VBLENDVPD_XMM_XMM_M128_XMM);
tp.insert_opcode(x64asm::Opcode::VBLENDVPD_XMM_XMM_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::VBLENDVPD_YMM_YMM_M256_YMM);
tp.insert_opcode(x64asm::Opcode::VBLENDVPD_YMM_YMM_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VBLENDVPS_XMM_XMM_M128_XMM);
tp.insert_opcode(x64asm::Opcode::VBLENDVPS_XMM_XMM_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::VBLENDVPS_YMM_YMM_M256_YMM);
tp.insert_opcode(x64asm::Opcode::VBLENDVPS_YMM_YMM_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VBROADCASTI128_YMM_M128);
tp.insert_opcode(x64asm::Opcode::VCMPPD_XMM_XMM_M128_IMM8);
tp.insert_opcode(x64asm::Opcode::VCMPPD_XMM_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VCMPPD_YMM_YMM_M256_IMM8);
tp.insert_opcode(x64asm::Opcode::VCMPPD_YMM_YMM_YMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VCMPPS_XMM_XMM_M128_IMM8);
tp.insert_opcode(x64asm::Opcode::VCMPPS_XMM_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VCMPPS_YMM_YMM_M256_IMM8);
tp.insert_opcode(x64asm::Opcode::VCMPPS_YMM_YMM_YMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VCMPSD_XMM_XMM_M64_IMM8);
tp.insert_opcode(x64asm::Opcode::VCMPSD_XMM_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VCMPSS_XMM_XMM_M32_IMM8);
tp.insert_opcode(x64asm::Opcode::VCMPSS_XMM_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VCOMISD_XMM_M64);
tp.insert_opcode(x64asm::Opcode::VCOMISD_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::VCOMISS_XMM_M32);
tp.insert_opcode(x64asm::Opcode::VCOMISS_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::VCVTPH2PS_XMM_M64);
tp.insert_opcode(x64asm::Opcode::VCVTPH2PS_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::VCVTPH2PS_YMM_M128);
tp.insert_opcode(x64asm::Opcode::VCVTPH2PS_YMM_XMM);
tp.insert_opcode(x64asm::Opcode::VCVTPS2PH_M128_YMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VCVTPS2PH_M64_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VCVTPS2PH_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VCVTPS2PH_XMM_YMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VCVTSD2SI_R32_M64);
tp.insert_opcode(x64asm::Opcode::VCVTSD2SI_R32_XMM);
tp.insert_opcode(x64asm::Opcode::VCVTSS2SI_R32_M32);
tp.insert_opcode(x64asm::Opcode::VCVTSS2SI_R32_XMM);
tp.insert_opcode(x64asm::Opcode::VCVTTSD2SI_R32_M64);
tp.insert_opcode(x64asm::Opcode::VCVTTSD2SI_R32_XMM);
tp.insert_opcode(x64asm::Opcode::VCVTTSS2SI_R32_M32);
tp.insert_opcode(x64asm::Opcode::VCVTTSS2SI_R32_XMM);
tp.insert_opcode(x64asm::Opcode::VDPPD_XMM_XMM_M128_IMM8);
tp.insert_opcode(x64asm::Opcode::VDPPD_XMM_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VDPPS_XMM_XMM_M128_IMM8);
tp.insert_opcode(x64asm::Opcode::VDPPS_XMM_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VDPPS_YMM_YMM_M256_IMM8);
tp.insert_opcode(x64asm::Opcode::VDPPS_YMM_YMM_YMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VEXTRACTF128_M128_YMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VEXTRACTF128_XMM_YMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VEXTRACTI128_M128_YMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VEXTRACTI128_XMM_YMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VEXTRACTPS_M32_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VEXTRACTPS_R32_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VFMADDSUB132PD_YMM_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VFMADDSUB132PD_YMM_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VFMADDSUB132PS_YMM_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VFMADDSUB132PS_YMM_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VFMADDSUB213PD_YMM_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VFMADDSUB213PD_YMM_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VFMADDSUB213PS_YMM_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VFMADDSUB213PS_YMM_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VFMADDSUB231PD_YMM_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VFMADDSUB231PD_YMM_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VFMADDSUB231PS_YMM_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VFMADDSUB231PS_YMM_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VFMSUBADD132PD_YMM_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VFMSUBADD132PD_YMM_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VFMSUBADD132PS_YMM_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VFMSUBADD132PS_YMM_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VFMSUBADD213PD_YMM_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VFMSUBADD213PD_YMM_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VFMSUBADD213PS_YMM_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VFMSUBADD213PS_YMM_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VFMSUBADD231PD_YMM_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VFMSUBADD231PD_YMM_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VFMSUBADD231PS_YMM_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VFMSUBADD231PS_YMM_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VINSERTF128_YMM_YMM_M128_IMM8);
tp.insert_opcode(x64asm::Opcode::VINSERTF128_YMM_YMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VINSERTI128_YMM_YMM_M128_IMM8);
tp.insert_opcode(x64asm::Opcode::VINSERTI128_YMM_YMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VINSERTPS_XMM_XMM_M32_IMM8);
tp.insert_opcode(x64asm::Opcode::VINSERTPS_XMM_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VMASKMOVPD_M128_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::VMASKMOVPD_M256_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VMASKMOVPD_XMM_XMM_M128);
tp.insert_opcode(x64asm::Opcode::VMASKMOVPD_YMM_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VMASKMOVPS_M128_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::VMASKMOVPS_M256_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VMASKMOVPS_XMM_XMM_M128);
tp.insert_opcode(x64asm::Opcode::VMASKMOVPS_YMM_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VMOVMSKPS_R32_YMM);
tp.insert_opcode(x64asm::Opcode::VMOVMSKPS_R64_YMM);
tp.insert_opcode(x64asm::Opcode::VMOVNTDQA_XMM_M128);
tp.insert_opcode(x64asm::Opcode::VMOVNTDQA_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VMOVNTPD_M128_XMM);
tp.insert_opcode(x64asm::Opcode::VMOVNTPD_M256_YMM);
tp.insert_opcode(x64asm::Opcode::VMOVNTPS_M128_XMM);
tp.insert_opcode(x64asm::Opcode::VMOVNTPS_M256_YMM);
tp.insert_opcode(x64asm::Opcode::VMPSADBW_XMM_XMM_M128_IMM8);
tp.insert_opcode(x64asm::Opcode::VMPSADBW_XMM_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VMPSADBW_YMM_YMM_M256_IMM8);
tp.insert_opcode(x64asm::Opcode::VMPSADBW_YMM_YMM_YMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VPACKSSDW_XMM_XMM_M128);
tp.insert_opcode(x64asm::Opcode::VPACKSSDW_XMM_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::VPACKSSDW_YMM_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VPACKSSDW_YMM_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VPACKSSWB_XMM_XMM_M128);
tp.insert_opcode(x64asm::Opcode::VPACKSSWB_XMM_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::VPACKSSWB_YMM_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VPACKSSWB_YMM_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VPACKUSDW_XMM_XMM_M128);
tp.insert_opcode(x64asm::Opcode::VPACKUSDW_XMM_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::VPACKUSDW_YMM_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VPACKUSDW_YMM_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VPACKUSWB_XMM_XMM_M128);
tp.insert_opcode(x64asm::Opcode::VPACKUSWB_XMM_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::VPACKUSWB_YMM_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VPACKUSWB_YMM_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VPADDSB_XMM_XMM_M128);
tp.insert_opcode(x64asm::Opcode::VPADDSB_XMM_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::VPADDSB_YMM_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VPADDSB_YMM_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VPADDSW_XMM_XMM_M128);
tp.insert_opcode(x64asm::Opcode::VPADDSW_XMM_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::VPADDSW_YMM_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VPADDSW_YMM_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VPBLENDD_XMM_XMM_M128_IMM8);
tp.insert_opcode(x64asm::Opcode::VPBLENDD_XMM_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VPBLENDD_YMM_YMM_M256_IMM8);
tp.insert_opcode(x64asm::Opcode::VPBLENDD_YMM_YMM_YMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VPBLENDVB_XMM_XMM_M128_XMM);
tp.insert_opcode(x64asm::Opcode::VPBLENDVB_XMM_XMM_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::VPBLENDVB_YMM_YMM_M256_YMM);
tp.insert_opcode(x64asm::Opcode::VPBLENDVB_YMM_YMM_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VPBLENDW_XMM_XMM_M128_IMM8);
tp.insert_opcode(x64asm::Opcode::VPBLENDW_XMM_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VPBLENDW_YMM_YMM_M256_IMM8);
tp.insert_opcode(x64asm::Opcode::VPBLENDW_YMM_YMM_YMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VPBROADCASTB_XMM_M8);
tp.insert_opcode(x64asm::Opcode::VPBROADCASTB_YMM_M8);
tp.insert_opcode(x64asm::Opcode::VPBROADCASTW_XMM_M16);
tp.insert_opcode(x64asm::Opcode::VPBROADCASTW_YMM_M16);
tp.insert_opcode(x64asm::Opcode::VPCLMULQDQ_XMM_XMM_M128_IMM8);
tp.insert_opcode(x64asm::Opcode::VPCLMULQDQ_XMM_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VPERM2F128_YMM_YMM_M256_IMM8);
tp.insert_opcode(x64asm::Opcode::VPERM2F128_YMM_YMM_YMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VPERM2I128_YMM_YMM_M256_IMM8);
tp.insert_opcode(x64asm::Opcode::VPERM2I128_YMM_YMM_YMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VPERMD_YMM_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VPERMD_YMM_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VPERMILPD_XMM_M128_IMM8);
tp.insert_opcode(x64asm::Opcode::VPERMILPD_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VPERMILPD_XMM_XMM_M128);
tp.insert_opcode(x64asm::Opcode::VPERMILPD_XMM_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::VPERMILPD_YMM_M256_IMM8);
tp.insert_opcode(x64asm::Opcode::VPERMILPD_YMM_YMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VPERMILPD_YMM_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VPERMILPD_YMM_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VPERMILPS_XMM_M128_IMM8);
tp.insert_opcode(x64asm::Opcode::VPERMILPS_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VPERMILPS_XMM_XMM_M128);
tp.insert_opcode(x64asm::Opcode::VPERMILPS_XMM_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::VPERMILPS_YMM_M256_IMM8);
tp.insert_opcode(x64asm::Opcode::VPERMILPS_YMM_YMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VPERMILPS_YMM_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VPERMILPS_YMM_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VPERMPD_YMM_M256_IMM8);
tp.insert_opcode(x64asm::Opcode::VPERMPD_YMM_YMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VPERMPS_YMM_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VPERMPS_YMM_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VPERMQ_YMM_M256_IMM8);
tp.insert_opcode(x64asm::Opcode::VPERMQ_YMM_YMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VPEXTRB_M8_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VPEXTRB_R32_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VPEXTRB_R64_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VPEXTRD_M32_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VPEXTRD_R32_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VPEXTRQ_M64_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VPEXTRQ_R64_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VPEXTRW_M16_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VPEXTRW_R32_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VPEXTRW_R64_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VPHADDSW_XMM_XMM_M128);
tp.insert_opcode(x64asm::Opcode::VPHADDSW_XMM_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::VPHADDSW_YMM_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VPHADDSW_YMM_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VPHMINPOSUW_XMM_M128);
tp.insert_opcode(x64asm::Opcode::VPHMINPOSUW_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::VPHSUBSW_XMM_XMM_M128);
tp.insert_opcode(x64asm::Opcode::VPHSUBSW_XMM_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::VPHSUBSW_YMM_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VPHSUBSW_YMM_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VPINSRB_XMM_XMM_M8_IMM8);
tp.insert_opcode(x64asm::Opcode::VPINSRB_XMM_XMM_R32_IMM8);
tp.insert_opcode(x64asm::Opcode::VPINSRD_XMM_XMM_M32_IMM8);
tp.insert_opcode(x64asm::Opcode::VPINSRD_XMM_XMM_R32_IMM8);
tp.insert_opcode(x64asm::Opcode::VPINSRQ_XMM_XMM_M64_IMM8);
tp.insert_opcode(x64asm::Opcode::VPINSRQ_XMM_XMM_R64_IMM8);
tp.insert_opcode(x64asm::Opcode::VPINSRW_XMM_XMM_M16_IMM8);
tp.insert_opcode(x64asm::Opcode::VPINSRW_XMM_XMM_R32_IMM8);
tp.insert_opcode(x64asm::Opcode::VPMADDUBSW_XMM_XMM_M128);
tp.insert_opcode(x64asm::Opcode::VPMADDUBSW_XMM_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::VPMADDUBSW_YMM_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VPMADDUBSW_YMM_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VPMADDWD_XMM_XMM_M128);
tp.insert_opcode(x64asm::Opcode::VPMADDWD_XMM_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::VPMADDWD_YMM_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VPMADDWD_YMM_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VPMASKMOVD_M128_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::VPMASKMOVD_M256_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VPMASKMOVD_XMM_XMM_M128);
tp.insert_opcode(x64asm::Opcode::VPMASKMOVD_YMM_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VPMASKMOVQ_M128_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::VPMASKMOVQ_M256_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VPMASKMOVQ_XMM_XMM_M128);
tp.insert_opcode(x64asm::Opcode::VPMASKMOVQ_YMM_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VPMULHRSW_XMM_XMM_M128);
tp.insert_opcode(x64asm::Opcode::VPMULHRSW_XMM_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::VPMULHRSW_YMM_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VPMULHRSW_YMM_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VPMULHUW_XMM_XMM_M128);
tp.insert_opcode(x64asm::Opcode::VPMULHUW_XMM_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::VPMULHUW_YMM_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VPMULHUW_YMM_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VPMULUDQ_XMM_XMM_M128);
tp.insert_opcode(x64asm::Opcode::VPMULUDQ_XMM_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::VPMULUDQ_YMM_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VPMULUDQ_YMM_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VPSADBW_XMM_XMM_M128);
tp.insert_opcode(x64asm::Opcode::VPSADBW_XMM_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::VPSADBW_YMM_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VPSADBW_YMM_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VPSHUFHW_XMM_M128_IMM8);
tp.insert_opcode(x64asm::Opcode::VPSHUFHW_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VPSHUFHW_YMM_M256_IMM8);
tp.insert_opcode(x64asm::Opcode::VPSHUFHW_YMM_YMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VPSLLDQ_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VPSLLDQ_YMM_YMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VPSRAD_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VPSRAD_XMM_XMM_M128);
tp.insert_opcode(x64asm::Opcode::VPSRAD_XMM_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::VPSRAD_YMM_YMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VPSRAD_YMM_YMM_M128);
tp.insert_opcode(x64asm::Opcode::VPSRAD_YMM_YMM_XMM);
tp.insert_opcode(x64asm::Opcode::VPSRAVD_XMM_XMM_M128);
tp.insert_opcode(x64asm::Opcode::VPSRAVD_XMM_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::VPSRAVD_YMM_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VPSRAVD_YMM_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VPSRAW_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VPSRAW_XMM_XMM_M128);
tp.insert_opcode(x64asm::Opcode::VPSRAW_XMM_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::VPSRAW_YMM_YMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VPSRAW_YMM_YMM_M128);
tp.insert_opcode(x64asm::Opcode::VPSRAW_YMM_YMM_XMM);
tp.insert_opcode(x64asm::Opcode::VPSRLDQ_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VPSRLDQ_YMM_YMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VPTEST_XMM_M128);
tp.insert_opcode(x64asm::Opcode::VPTEST_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::VPTEST_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VPTEST_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VROUNDPD_XMM_M128_IMM8);
tp.insert_opcode(x64asm::Opcode::VROUNDPD_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VROUNDPD_YMM_M256_IMM8);
tp.insert_opcode(x64asm::Opcode::VROUNDPD_YMM_YMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VROUNDPS_XMM_M128_IMM8);
tp.insert_opcode(x64asm::Opcode::VROUNDPS_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VROUNDPS_YMM_M256_IMM8);
tp.insert_opcode(x64asm::Opcode::VROUNDPS_YMM_YMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VROUNDSD_XMM_XMM_M64_IMM8);
tp.insert_opcode(x64asm::Opcode::VROUNDSD_XMM_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VROUNDSS_XMM_XMM_M32_IMM8);
tp.insert_opcode(x64asm::Opcode::VROUNDSS_XMM_XMM_XMM_IMM8);
tp.insert_opcode(x64asm::Opcode::VTESTPD_XMM_M128);
tp.insert_opcode(x64asm::Opcode::VTESTPD_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::VTESTPD_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VTESTPD_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VTESTPS_XMM_M128);
tp.insert_opcode(x64asm::Opcode::VTESTPS_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::VTESTPS_YMM_M256);
tp.insert_opcode(x64asm::Opcode::VTESTPS_YMM_YMM);
tp.insert_opcode(x64asm::Opcode::VUCOMISD_XMM_M64);
tp.insert_opcode(x64asm::Opcode::VUCOMISD_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::VUCOMISS_XMM_M32);
tp.insert_opcode(x64asm::Opcode::VUCOMISS_XMM_XMM);
tp.insert_opcode(x64asm::Opcode::CMPXCHG_RH_RH);
tp.insert_opcode(x64asm::Opcode::CMPXCHG_R8_RH);
tp.insert_opcode(x64asm::Opcode::CMPXCHG_M8_RH);
tp.insert_opcode(x64asm::Opcode::CMPXCHG_RH_R8);
tp.insert_opcode(x64asm::Opcode::CMPXCHG_R8_R8);
tp.insert_opcode(x64asm::Opcode::CMPXCHG_M8_R8);
tp.insert_opcode(x64asm::Opcode::CMPXCHG_R32_R32);
tp.insert_opcode(x64asm::Opcode::CMPXCHG_M32_R32);
tp.insert_opcode(x64asm::Opcode::CMPXCHG_R64_R64);
tp.insert_opcode(x64asm::Opcode::CMPXCHG_M64_R64);
tp.insert_opcode(x64asm::Opcode::CMPXCHG_R16_R16);
tp.insert_opcode(x64asm::Opcode::CMPXCHG_M16_R16);
=======
//tp.insert_opcode(x64asm::Opcode::BLENDPD_XMM_M128_IMM8);
//tp.insert_opcode(x64asm::Opcode::BLENDPD_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::BLENDPS_XMM_M128_IMM8);
//tp.insert_opcode(x64asm::Opcode::BLENDPS_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::BLENDVPD_XMM_M128_XMM0);
//tp.insert_opcode(x64asm::Opcode::BLENDVPD_XMM_XMM_XMM0);
//tp.insert_opcode(x64asm::Opcode::BLENDVPS_XMM_M128_XMM0);
//tp.insert_opcode(x64asm::Opcode::BLENDVPS_XMM_XMM_XMM0);
//tp.insert_opcode(x64asm::Opcode::BLSI_R64_M64);
//tp.insert_opcode(x64asm::Opcode::BLSI_R64_R64);
//tp.insert_opcode(x64asm::Opcode::BLSMSK_R64_M64);
//tp.insert_opcode(x64asm::Opcode::BLSMSK_R64_R64);
//tp.insert_opcode(x64asm::Opcode::BZHI_R32_M32_R32);
//tp.insert_opcode(x64asm::Opcode::BZHI_R32_R32_R32);
//tp.insert_opcode(x64asm::Opcode::BZHI_R64_M64_R64);
//tp.insert_opcode(x64asm::Opcode::BZHI_R64_R64_R64);
//tp.insert_opcode(x64asm::Opcode::CMPPD_XMM_M128_IMM8);
//tp.insert_opcode(x64asm::Opcode::CMPPD_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::CMPPS_XMM_M128_IMM8);
//tp.insert_opcode(x64asm::Opcode::CMPPS_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::CMPSD_XMM_M64_IMM8);
//tp.insert_opcode(x64asm::Opcode::CMPSD_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::CMPSS_XMM_M32_IMM8);
//tp.insert_opcode(x64asm::Opcode::CMPSS_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::CMPXCHG16B_M128);
//tp.insert_opcode(x64asm::Opcode::CMPXCHG8B_M64);
//tp.insert_opcode(x64asm::Opcode::CMPXCHG_M32_R32);
//tp.insert_opcode(x64asm::Opcode::CMPXCHG_R32_R32);
//tp.insert_opcode(x64asm::Opcode::COMISD_XMM_M64);
//tp.insert_opcode(x64asm::Opcode::COMISD_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::COMISS_XMM_M32);
//tp.insert_opcode(x64asm::Opcode::COMISS_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::CVTSD2SI_R32_M64);
//tp.insert_opcode(x64asm::Opcode::CVTSD2SI_R32_XMM);
//tp.insert_opcode(x64asm::Opcode::CVTSS2SI_R32_M32);
//tp.insert_opcode(x64asm::Opcode::CVTSS2SI_R32_XMM);
//tp.insert_opcode(x64asm::Opcode::CVTTSD2SI_R32_M64);
//tp.insert_opcode(x64asm::Opcode::CVTTSD2SI_R32_XMM);
//tp.insert_opcode(x64asm::Opcode::CVTTSS2SI_R32_M32);
//tp.insert_opcode(x64asm::Opcode::CVTTSS2SI_R32_XMM);
//tp.insert_opcode(x64asm::Opcode::DPPD_XMM_M128_IMM8);
//tp.insert_opcode(x64asm::Opcode::DPPD_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::DPPS_XMM_M128_IMM8);
//tp.insert_opcode(x64asm::Opcode::DPPS_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::EXTRACTPS_M32_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::EXTRACTPS_R32_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::EXTRACTPS_R64_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::INSERTPS_XMM_M32_IMM8);
//tp.insert_opcode(x64asm::Opcode::INSERTPS_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::LZCNT_R32_M32);
//tp.insert_opcode(x64asm::Opcode::LZCNT_R32_R32);
//tp.insert_opcode(x64asm::Opcode::LZCNT_R64_M64);
//tp.insert_opcode(x64asm::Opcode::LZCNT_R64_R64);
//tp.insert_opcode(x64asm::Opcode::LZCNT_R16_M16);
//tp.insert_opcode(x64asm::Opcode::LZCNT_R16_R16);
//tp.insert_opcode(x64asm::Opcode::MOVBE_M32_R32);
//tp.insert_opcode(x64asm::Opcode::MOVBE_R32_M32);
//tp.insert_opcode(x64asm::Opcode::MOVBE_M64_R64);
//tp.insert_opcode(x64asm::Opcode::MOVBE_R64_M64);
//tp.insert_opcode(x64asm::Opcode::MOVBE_M16_R16);
//tp.insert_opcode(x64asm::Opcode::MOVBE_R16_M16);
//tp.insert_opcode(x64asm::Opcode::MOVNTDQ_M128_XMM);
//tp.insert_opcode(x64asm::Opcode::MOVNTDQA_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::MOVNTI_M32_R32);
//tp.insert_opcode(x64asm::Opcode::MOVNTI_M64_R64);
//tp.insert_opcode(x64asm::Opcode::MOVNTPD_M128_XMM);
//tp.insert_opcode(x64asm::Opcode::MOVNTPS_M128_XMM);
//tp.insert_opcode(x64asm::Opcode::MPSADBW_XMM_M128_IMM8);
//tp.insert_opcode(x64asm::Opcode::MPSADBW_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::MULX_R32_R32_M32);
//tp.insert_opcode(x64asm::Opcode::MULX_R32_R32_R32);
//tp.insert_opcode(x64asm::Opcode::MULX_R64_R64_M64);
//tp.insert_opcode(x64asm::Opcode::MULX_R64_R64_R64);
//tp.insert_opcode(x64asm::Opcode::PACKSSDW_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::PACKSSDW_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::PACKSSWB_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::PACKSSWB_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::PACKUSDW_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::PACKUSDW_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::PACKUSWB_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::PACKUSWB_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::PADDSB_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::PADDSB_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::PADDSW_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::PADDSW_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::PBLENDVB_XMM_M128_XMM0);
//tp.insert_opcode(x64asm::Opcode::PBLENDVB_XMM_XMM_XMM0);
//tp.insert_opcode(x64asm::Opcode::PBLENDW_XMM_M128_IMM8);
//tp.insert_opcode(x64asm::Opcode::PBLENDW_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::PCLMULQDQ_XMM_M128_IMM8);
//tp.insert_opcode(x64asm::Opcode::PCLMULQDQ_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::PEXTRB_M8_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::PEXTRB_R32_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::PEXTRB_R64_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::PEXTRD_M32_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::PEXTRD_R32_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::PEXTRQ_M64_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::PEXTRQ_R64_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::PEXTRW_M16_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::PEXTRW_R32_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::PEXTRW_R64_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::PHADDSW_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::PHADDSW_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::PHMINPOSUW_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::PHMINPOSUW_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::PHSUBSW_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::PHSUBSW_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::PINSRB_XMM_M8_IMM8);
//tp.insert_opcode(x64asm::Opcode::PINSRB_XMM_R32_IMM8);
//tp.insert_opcode(x64asm::Opcode::PINSRD_XMM_M32_IMM8);
//tp.insert_opcode(x64asm::Opcode::PINSRD_XMM_R32_IMM8);
//tp.insert_opcode(x64asm::Opcode::PINSRW_XMM_M16_IMM8);
//tp.insert_opcode(x64asm::Opcode::PINSRW_XMM_R32_IMM8);
//tp.insert_opcode(x64asm::Opcode::PMADDUBSW_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::PMADDUBSW_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::PMADDWD_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::PMADDWD_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::PMULHRSW_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::PMULHRSW_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::PMULHUW_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::PMULHUW_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::PMULUDQ_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::PMULUDQ_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::PSADBW_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::PSADBW_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::PSHUFB_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::PSHUFB_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::PSHUFHW_XMM_M128_IMM8);
//tp.insert_opcode(x64asm::Opcode::PSHUFHW_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::PSLLDQ_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::PSRAD_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::PSRAD_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::PSRAD_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::PSRAW_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::PSRAW_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::PSRAW_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::PSRLDQ_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::PTEST_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::PTEST_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::RORX_R32_M32_IMM8);
//tp.insert_opcode(x64asm::Opcode::RORX_R32_R32_IMM8);
//tp.insert_opcode(x64asm::Opcode::RORX_R64_M64_IMM8);
//tp.insert_opcode(x64asm::Opcode::RORX_R64_R64_IMM8);
//tp.insert_opcode(x64asm::Opcode::ROUNDPD_XMM_M128_IMM8);
//tp.insert_opcode(x64asm::Opcode::ROUNDPD_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::ROUNDPS_XMM_M128_IMM8);
//tp.insert_opcode(x64asm::Opcode::ROUNDPS_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::ROUNDSD_XMM_M64_IMM8);
//tp.insert_opcode(x64asm::Opcode::ROUNDSD_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::ROUNDSS_XMM_M32_IMM8);
//tp.insert_opcode(x64asm::Opcode::ROUNDSS_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::SARX_R32_M32_R32);
//tp.insert_opcode(x64asm::Opcode::SARX_R32_R32_R32);
//tp.insert_opcode(x64asm::Opcode::SHLX_R32_M32_R32);
//tp.insert_opcode(x64asm::Opcode::SHLX_R32_R32_R32);
//tp.insert_opcode(x64asm::Opcode::TZCNT_R64_M64);
//tp.insert_opcode(x64asm::Opcode::TZCNT_R64_R64);
//tp.insert_opcode(x64asm::Opcode::UCOMISD_XMM_M64);
//tp.insert_opcode(x64asm::Opcode::UCOMISD_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::UCOMISS_XMM_M32);
//tp.insert_opcode(x64asm::Opcode::UCOMISS_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VADDSUBPD_YMM_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VADDSUBPD_YMM_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VADDSUBPS_YMM_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VADDSUBPS_YMM_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VBLENDPD_XMM_XMM_M128_IMM8);
//tp.insert_opcode(x64asm::Opcode::VBLENDPD_XMM_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VBLENDPD_YMM_YMM_M256_IMM8);
//tp.insert_opcode(x64asm::Opcode::VBLENDPD_YMM_YMM_YMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VBLENDPS_XMM_XMM_M128_IMM8);
//tp.insert_opcode(x64asm::Opcode::VBLENDPS_XMM_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VBLENDPS_YMM_YMM_M256_IMM8);
//tp.insert_opcode(x64asm::Opcode::VBLENDPS_YMM_YMM_YMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VBLENDVPD_XMM_XMM_M128_XMM);
//tp.insert_opcode(x64asm::Opcode::VBLENDVPD_XMM_XMM_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VBLENDVPD_YMM_YMM_M256_YMM);
//tp.insert_opcode(x64asm::Opcode::VBLENDVPD_YMM_YMM_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VBLENDVPS_XMM_XMM_M128_XMM);
//tp.insert_opcode(x64asm::Opcode::VBLENDVPS_XMM_XMM_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VBLENDVPS_YMM_YMM_M256_YMM);
//tp.insert_opcode(x64asm::Opcode::VBLENDVPS_YMM_YMM_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VBROADCASTI128_YMM_M128);
//tp.insert_opcode(x64asm::Opcode::VCMPPD_XMM_XMM_M128_IMM8);
//tp.insert_opcode(x64asm::Opcode::VCMPPD_XMM_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VCMPPD_YMM_YMM_M256_IMM8);
//tp.insert_opcode(x64asm::Opcode::VCMPPD_YMM_YMM_YMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VCMPPS_XMM_XMM_M128_IMM8);
//tp.insert_opcode(x64asm::Opcode::VCMPPS_XMM_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VCMPPS_YMM_YMM_M256_IMM8);
//tp.insert_opcode(x64asm::Opcode::VCMPPS_YMM_YMM_YMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VCMPSD_XMM_XMM_M64_IMM8);
//tp.insert_opcode(x64asm::Opcode::VCMPSD_XMM_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VCMPSS_XMM_XMM_M32_IMM8);
//tp.insert_opcode(x64asm::Opcode::VCMPSS_XMM_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VCOMISD_XMM_M64);
//tp.insert_opcode(x64asm::Opcode::VCOMISD_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VCOMISS_XMM_M32);
//tp.insert_opcode(x64asm::Opcode::VCOMISS_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VCVTPH2PS_XMM_M64);
//tp.insert_opcode(x64asm::Opcode::VCVTPH2PS_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VCVTPH2PS_YMM_M128);
//tp.insert_opcode(x64asm::Opcode::VCVTPH2PS_YMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VCVTPS2PH_M128_YMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VCVTPS2PH_M64_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VCVTPS2PH_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VCVTPS2PH_XMM_YMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VCVTSD2SI_R32_M64);
//tp.insert_opcode(x64asm::Opcode::VCVTSD2SI_R32_XMM);
//tp.insert_opcode(x64asm::Opcode::VCVTSS2SI_R32_M32);
//tp.insert_opcode(x64asm::Opcode::VCVTSS2SI_R32_XMM);
//tp.insert_opcode(x64asm::Opcode::VCVTTSD2SI_R32_M64);
//tp.insert_opcode(x64asm::Opcode::VCVTTSD2SI_R32_XMM);
//tp.insert_opcode(x64asm::Opcode::VCVTTSS2SI_R32_M32);
//tp.insert_opcode(x64asm::Opcode::VCVTTSS2SI_R32_XMM);
//tp.insert_opcode(x64asm::Opcode::VDPPD_XMM_XMM_M128_IMM8);
//tp.insert_opcode(x64asm::Opcode::VDPPD_XMM_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VDPPS_XMM_XMM_M128_IMM8);
//tp.insert_opcode(x64asm::Opcode::VDPPS_XMM_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VDPPS_YMM_YMM_M256_IMM8);
//tp.insert_opcode(x64asm::Opcode::VDPPS_YMM_YMM_YMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VEXTRACTF128_M128_YMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VEXTRACTF128_XMM_YMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VEXTRACTI128_M128_YMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VEXTRACTI128_XMM_YMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VEXTRACTPS_M32_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VEXTRACTPS_R32_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VFMADDSUB132PD_YMM_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VFMADDSUB132PD_YMM_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VFMADDSUB132PS_YMM_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VFMADDSUB132PS_YMM_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VFMADDSUB213PD_YMM_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VFMADDSUB213PD_YMM_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VFMADDSUB213PS_YMM_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VFMADDSUB213PS_YMM_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VFMADDSUB231PD_YMM_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VFMADDSUB231PD_YMM_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VFMADDSUB231PS_YMM_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VFMADDSUB231PS_YMM_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VFMSUBADD132PD_YMM_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VFMSUBADD132PD_YMM_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VFMSUBADD132PS_YMM_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VFMSUBADD132PS_YMM_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VFMSUBADD213PD_YMM_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VFMSUBADD213PD_YMM_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VFMSUBADD213PS_YMM_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VFMSUBADD213PS_YMM_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VFMSUBADD231PD_YMM_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VFMSUBADD231PD_YMM_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VFMSUBADD231PS_YMM_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VFMSUBADD231PS_YMM_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VINSERTF128_YMM_YMM_M128_IMM8);
//tp.insert_opcode(x64asm::Opcode::VINSERTF128_YMM_YMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VINSERTI128_YMM_YMM_M128_IMM8);
//tp.insert_opcode(x64asm::Opcode::VINSERTI128_YMM_YMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VINSERTPS_XMM_XMM_M32_IMM8);
//tp.insert_opcode(x64asm::Opcode::VINSERTPS_XMM_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VMASKMOVPD_M128_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VMASKMOVPD_M256_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VMASKMOVPD_XMM_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::VMASKMOVPD_YMM_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VMASKMOVPS_M128_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VMASKMOVPS_M256_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VMASKMOVPS_XMM_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::VMASKMOVPS_YMM_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VMOVMSKPS_R32_YMM);
//tp.insert_opcode(x64asm::Opcode::VMOVMSKPS_R64_YMM);
//tp.insert_opcode(x64asm::Opcode::VMOVNTDQA_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::VMOVNTDQA_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VMOVNTPD_M128_XMM);
//tp.insert_opcode(x64asm::Opcode::VMOVNTPD_M256_YMM);
//tp.insert_opcode(x64asm::Opcode::VMOVNTPS_M128_XMM);
//tp.insert_opcode(x64asm::Opcode::VMOVNTPS_M256_YMM);
//tp.insert_opcode(x64asm::Opcode::VMPSADBW_XMM_XMM_M128_IMM8);
//tp.insert_opcode(x64asm::Opcode::VMPSADBW_XMM_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VMPSADBW_YMM_YMM_M256_IMM8);
//tp.insert_opcode(x64asm::Opcode::VMPSADBW_YMM_YMM_YMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPACKSSDW_XMM_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::VPACKSSDW_XMM_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VPACKSSDW_YMM_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VPACKSSDW_YMM_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VPACKSSWB_XMM_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::VPACKSSWB_XMM_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VPACKSSWB_YMM_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VPACKSSWB_YMM_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VPACKUSDW_XMM_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::VPACKUSDW_XMM_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VPACKUSDW_YMM_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VPACKUSDW_YMM_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VPACKUSWB_XMM_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::VPACKUSWB_XMM_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VPACKUSWB_YMM_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VPACKUSWB_YMM_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VPADDSB_XMM_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::VPADDSB_XMM_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VPADDSB_YMM_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VPADDSB_YMM_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VPADDSW_XMM_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::VPADDSW_XMM_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VPADDSW_YMM_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VPADDSW_YMM_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VPBLENDD_XMM_XMM_M128_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPBLENDD_XMM_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPBLENDD_YMM_YMM_M256_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPBLENDD_YMM_YMM_YMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPBLENDVB_XMM_XMM_M128_XMM);
//tp.insert_opcode(x64asm::Opcode::VPBLENDVB_XMM_XMM_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VPBLENDVB_YMM_YMM_M256_YMM);
//tp.insert_opcode(x64asm::Opcode::VPBLENDVB_YMM_YMM_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VPBLENDW_XMM_XMM_M128_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPBLENDW_XMM_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPBLENDW_YMM_YMM_M256_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPBLENDW_YMM_YMM_YMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPBROADCASTB_XMM_M8);
//tp.insert_opcode(x64asm::Opcode::VPBROADCASTB_YMM_M8);
//tp.insert_opcode(x64asm::Opcode::VPBROADCASTW_XMM_M16);
//tp.insert_opcode(x64asm::Opcode::VPBROADCASTW_YMM_M16);
//tp.insert_opcode(x64asm::Opcode::VPCLMULQDQ_XMM_XMM_M128_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPCLMULQDQ_XMM_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPERM2F128_YMM_YMM_M256_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPERM2F128_YMM_YMM_YMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPERM2I128_YMM_YMM_M256_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPERM2I128_YMM_YMM_YMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPERMD_YMM_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VPERMD_YMM_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VPERMILPD_XMM_M128_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPERMILPD_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPERMILPD_XMM_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::VPERMILPD_XMM_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VPERMILPD_YMM_M256_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPERMILPD_YMM_YMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPERMILPD_YMM_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VPERMILPD_YMM_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VPERMILPS_XMM_M128_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPERMILPS_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPERMILPS_XMM_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::VPERMILPS_XMM_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VPERMILPS_YMM_M256_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPERMILPS_YMM_YMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPERMILPS_YMM_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VPERMILPS_YMM_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VPERMPD_YMM_M256_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPERMPD_YMM_YMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPERMPS_YMM_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VPERMPS_YMM_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VPERMQ_YMM_M256_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPERMQ_YMM_YMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPEXTRB_M8_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPEXTRB_R32_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPEXTRB_R64_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPEXTRD_M32_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPEXTRD_R32_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPEXTRQ_M64_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPEXTRQ_R64_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPEXTRW_M16_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPEXTRW_R32_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPEXTRW_R64_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPHADDSW_XMM_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::VPHADDSW_XMM_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VPHADDSW_YMM_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VPHADDSW_YMM_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VPHMINPOSUW_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::VPHMINPOSUW_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VPHSUBSW_XMM_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::VPHSUBSW_XMM_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VPHSUBSW_YMM_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VPHSUBSW_YMM_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VPINSRB_XMM_XMM_M8_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPINSRB_XMM_XMM_R32_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPINSRD_XMM_XMM_M32_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPINSRD_XMM_XMM_R32_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPINSRQ_XMM_XMM_M64_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPINSRQ_XMM_XMM_R64_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPINSRW_XMM_XMM_M16_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPINSRW_XMM_XMM_R32_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPMADDUBSW_XMM_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::VPMADDUBSW_XMM_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VPMADDUBSW_YMM_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VPMADDUBSW_YMM_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VPMADDWD_XMM_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::VPMADDWD_XMM_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VPMADDWD_YMM_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VPMADDWD_YMM_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VPMASKMOVD_M128_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VPMASKMOVD_M256_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VPMASKMOVD_XMM_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::VPMASKMOVD_YMM_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VPMASKMOVQ_M128_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VPMASKMOVQ_M256_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VPMASKMOVQ_XMM_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::VPMASKMOVQ_YMM_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VPMULHRSW_XMM_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::VPMULHRSW_XMM_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VPMULHRSW_YMM_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VPMULHRSW_YMM_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VPMULHUW_XMM_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::VPMULHUW_XMM_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VPMULHUW_YMM_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VPMULHUW_YMM_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VPMULUDQ_XMM_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::VPMULUDQ_XMM_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VPMULUDQ_YMM_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VPMULUDQ_YMM_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VPSADBW_XMM_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::VPSADBW_XMM_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VPSADBW_YMM_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VPSADBW_YMM_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VPSHUFHW_XMM_M128_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPSHUFHW_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPSHUFHW_YMM_M256_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPSHUFHW_YMM_YMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPSLLDQ_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPSLLDQ_YMM_YMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPSRAD_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPSRAD_XMM_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::VPSRAD_XMM_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VPSRAD_YMM_YMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPSRAD_YMM_YMM_M128);
//tp.insert_opcode(x64asm::Opcode::VPSRAD_YMM_YMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VPSRAVD_XMM_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::VPSRAVD_XMM_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VPSRAVD_YMM_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VPSRAVD_YMM_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VPSRAW_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPSRAW_XMM_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::VPSRAW_XMM_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VPSRAW_YMM_YMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPSRAW_YMM_YMM_M128);
//tp.insert_opcode(x64asm::Opcode::VPSRAW_YMM_YMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VPSRLDQ_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPSRLDQ_YMM_YMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VPTEST_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::VPTEST_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VPTEST_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VPTEST_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VROUNDPD_XMM_M128_IMM8);
//tp.insert_opcode(x64asm::Opcode::VROUNDPD_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VROUNDPD_YMM_M256_IMM8);
//tp.insert_opcode(x64asm::Opcode::VROUNDPD_YMM_YMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VROUNDPS_XMM_M128_IMM8);
//tp.insert_opcode(x64asm::Opcode::VROUNDPS_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VROUNDPS_YMM_M256_IMM8);
//tp.insert_opcode(x64asm::Opcode::VROUNDPS_YMM_YMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VROUNDSD_XMM_XMM_M64_IMM8);
//tp.insert_opcode(x64asm::Opcode::VROUNDSD_XMM_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VROUNDSS_XMM_XMM_M32_IMM8);
//tp.insert_opcode(x64asm::Opcode::VROUNDSS_XMM_XMM_XMM_IMM8);
//tp.insert_opcode(x64asm::Opcode::VTESTPD_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::VTESTPD_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VTESTPD_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VTESTPD_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VTESTPS_XMM_M128);
//tp.insert_opcode(x64asm::Opcode::VTESTPS_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VTESTPS_YMM_M256);
//tp.insert_opcode(x64asm::Opcode::VTESTPS_YMM_YMM);
//tp.insert_opcode(x64asm::Opcode::VUCOMISD_XMM_M64);
//tp.insert_opcode(x64asm::Opcode::VUCOMISD_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::VUCOMISS_XMM_M32);
//tp.insert_opcode(x64asm::Opcode::VUCOMISS_XMM_XMM);
//tp.insert_opcode(x64asm::Opcode::BSF_R32_R32);
//tp.insert_opcode(x64asm::Opcode::BSF_R32_M32);
//tp.insert_opcode(x64asm::Opcode::BSF_R64_R64);
//tp.insert_opcode(x64asm::Opcode::BSF_R64_M64);
//tp.insert_opcode(x64asm::Opcode::BSF_R16_R16);
//tp.insert_opcode(x64asm::Opcode::BSF_R16_M16);
//tp.insert_opcode(x64asm::Opcode::BSR_R32_R32);
//tp.insert_opcode(x64asm::Opcode::BSR_R32_M32);
//tp.insert_opcode(x64asm::Opcode::BSR_R64_R64);
//tp.insert_opcode(x64asm::Opcode::BSR_R64_M64);
//tp.insert_opcode(x64asm::Opcode::BSR_R16_R16);
//tp.insert_opcode(x64asm::Opcode::BSR_R16_M16);
